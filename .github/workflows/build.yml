name: Build and Release CUDA Package

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cuda: ['12.1']
        python-version: ['3.9']

    steps:
    - uses: actions/checkout@v3

    - name: Set up CUDA ${{ matrix.cuda }}
      uses: actions/setup-cuda@v2
      with:
        cuda-version: ${{ matrix.cuda }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y freeglut3-dev libglu1-mesa-dev libmagma-dev

    - name: Install PyTorch with CUDA
      run: |
        pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

    - name: Install build dependencies
      run: |
        pip install setuptools wheel

    - name: Build package
      run: |
        cd cuda
        python setup.py bdist_wheel

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: kilonerf_cuda
        path: cuda/dist/*.whl

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: cuda/dist/*.whl
        asset_name: kilonerf_cuda-${{ github.ref }}.whl
        asset_content_type: application/zip